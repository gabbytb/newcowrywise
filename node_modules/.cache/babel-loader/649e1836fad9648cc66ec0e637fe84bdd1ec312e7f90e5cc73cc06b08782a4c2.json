{"ast":null,"code":"function Utils() {\n  function isElementInView(element, fullyInView) {\n    const pageTop = window.scrollY;\n    const pageBottom = pageTop + window.innerHeight;\n    const elementTop = element.offsetTop;\n    const elementBottom = elementTop + element.offsetHeight;\n    if (fullyInView === true) {\n      return pageTop < elementTop && pageBottom > elementBottom;\n    } else {\n      return elementTop <= pageBottom && elementBottom >= pageTop;\n    }\n  }\n  return null; // Since this is a utility component, it doesn't render anything\n}\n_c = Utils;\nexport default Utils;\nvar _c;\n$RefreshReg$(_c, \"Utils\");","map":{"version":3,"names":["Utils","isElementInView","element","fullyInView","pageTop","window","scrollY","pageBottom","innerHeight","elementTop","offsetTop","elementBottom","offsetHeight","_c","$RefreshReg$"],"sources":["C:/Users/paulr/Documents/GitHub/newcowrywise/src/utils/Utils.js"],"sourcesContent":["function Utils() {\r\n    \r\n    function isElementInView(element, fullyInView) {\r\n        const pageTop = window.scrollY;\r\n        const pageBottom = pageTop + window.innerHeight;\r\n        const elementTop = element.offsetTop;\r\n        const elementBottom = elementTop + element.offsetHeight;\r\n\r\n        if (fullyInView === true) {\r\n            return pageTop < elementTop && pageBottom > elementBottom;\r\n        } else {\r\n            return elementTop <= pageBottom && elementBottom >= pageTop;\r\n        }\r\n    }\r\n\r\n    return null; // Since this is a utility component, it doesn't render anything\r\n}\r\n\r\nexport default Utils;"],"mappings":"AAAA,SAASA,KAAKA,CAAA,EAAG;EAEb,SAASC,eAAeA,CAACC,OAAO,EAAEC,WAAW,EAAE;IAC3C,MAAMC,OAAO,GAAGC,MAAM,CAACC,OAAO;IAC9B,MAAMC,UAAU,GAAGH,OAAO,GAAGC,MAAM,CAACG,WAAW;IAC/C,MAAMC,UAAU,GAAGP,OAAO,CAACQ,SAAS;IACpC,MAAMC,aAAa,GAAGF,UAAU,GAAGP,OAAO,CAACU,YAAY;IAEvD,IAAIT,WAAW,KAAK,IAAI,EAAE;MACtB,OAAOC,OAAO,GAAGK,UAAU,IAAIF,UAAU,GAAGI,aAAa;IAC7D,CAAC,MAAM;MACH,OAAOF,UAAU,IAAIF,UAAU,IAAII,aAAa,IAAIP,OAAO;IAC/D;EACJ;EAEA,OAAO,IAAI,CAAC,CAAC;AACjB;AAACS,EAAA,GAhBQb,KAAK;AAkBd,eAAeA,KAAK;AAAC,IAAAa,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}